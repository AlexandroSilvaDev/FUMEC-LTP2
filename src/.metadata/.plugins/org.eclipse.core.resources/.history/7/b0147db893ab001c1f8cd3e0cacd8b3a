package LTP2;

import java.util.*;

/*
Exercício 4.3 - Fazer um programa para controlar as contas de uma rede de Hoteis. Receber via teclado
o Nome do Hóspede, o Dia de Entrada no Hotel, o Dia de Saída do Hotel, o Tipo de Quarto e a Cidade
do Hotel.
O programa deverá por meio de um método de nome calcularConta, calcular e imprimir o valor da Conta
de cada hóspede de acordo com a seguinte tabela:

______________________________________
| Tipo de Quarto  |  Valor da Diária |
|------------------------------------| 
|    STANDARD     |      120,00      | 
|      LUXO       |      150,00      |
|   SUPER-LUXO    |      180,00      |
--------------------------------------

O valor da conta será o valor da diária multiplicada pelo número de diárias da hospedagem. Para
descobrir o número de diárias, subtrair o dia de saída do dia de entrada no hotel.
Fórmula => Valor da Conta = (diaSaida - diaEntrada) * Valor Diaria

Ex:
Dia de Entrada: 20
Dia de Saída: 25
Tipo de Quarto: Luxo - Valor Diaria: 150,00
Valor da conta: ( 25 – 20 ) * 150,00 = 750,00

O método deverá receber como parâmetro a Dia da Entrada, o Dia da Saída e o Tipo de Quarto.
O programa deverá imprimir no final um relatório com o Nome do hóspede e o Valor da Conta, de
todas as contas acima da média.

Consistências:
- Fazer um método de nome cidadeEhValida para consistir a Cidade do Hoteldigitada.
- Parâmetro: Cidade do Hotel digitada.
- Este método deverá pesquisar no vetor vetCidades se o nome da cidade informada existe lá,
caso positivo, o método deverá retornar o valor TRUE, caso negativo retornar o valor FALSE.
- Consistir o tipo de quarto para aceitar somente os valores STANDARD, LUXO ou SUPER-LUXO.
- O Dia de Saída deverá ser maior que o Dia de Entrada.

Obs:
- declarar no programa um vetor global de nome vetCidades contendo os seguintes nomes de cidades:
BELO HORIZONTE, SÃO PAULO, RIO DE JANEIRO, SALVADOR e CURITIBA
- Criar um flag para encerrar a entrada de dados.
- O número máximo de hospedagens que o programa receberá será 100.
- Considerar que a entrada e saída no hotel ocorrem sempre no mesmo mês.

Layout do relatório:
Relatório de contas acima da média

Nome do hóspede   Vlr Conta
--------------------------------
XXXXXXXXXXXXXXXX   999.99
XXXXXXXXXXXXXXXX   999.99
XXXXXXXXXXXXXXXX   999.99
XXXXXXXXXXXXXXXX   999.99
*/

public class Exercício_4_3 {

	static String cidades[] = {"BELO HORIZONTE", "SÃO PAULO", "RIO DE JANEIRO", "SALVADOR", "CURITIBA"};
	
	public static void main(String[] args) {
		
		// 1 - Variáveis:
		
		Scanner leia = new Scanner(System.in);
		
		String nomeHospede[] = new String[100];
		String tipoQuarto;
		String nomeCidade;
		float valorConta[] = new float[100];
		float soma = 0;
		float media = 0;
		byte contador = 0;
		byte diaSaida = 0;
		byte diaEntrada = 0;
		byte i;
		
		// 2 - Entrada de dados:
		
		for ( i = 0 ; i < 100 ; i++ ) {
			
			System.out.println("Digite o nome do hóspede: ");
			nomeHospede[i] = leia.nextLine();
			
			if ( nomeHospede[i].equalsIgnoreCase("Sair") ) {
				break;
			}
			
			do {
				System.out.println("Digite o tipo do quarto: ");
				tipoQuarto = leia.nextLine();
				
				if ( ! tipoQuarto.equalsIgnoreCase("STANDARD") && ! tipoQuarto.equalsIgnoreCase("LUXO") && ! tipoQuarto.equalsIgnoreCase("SUPER-LUXO") ) {
					System.out.println("Tipo de quarto inválido! Digite novamente.");
				}
			} while( ! tipoQuarto.equalsIgnoreCase("STANDARD") && ! tipoQuarto.equalsIgnoreCase("LUXO") && ! tipoQuarto.equalsIgnoreCase("SUPER-LUXO") );
			
			do {
				System.out.println("Digite o dia de entrada no hotel: ");
				diaEntrada = leia.nextByte();
				
				System.out.println("Digite o dia de saída do hotel: ");
				diaSaida = leia.nextByte();
				
				if ( diaSaida <= diaEntrada ) {
					System.out.println("Dia de saída deve ser maior que o dia de entrada no hotel! Digite novamente.");
				}
				
			} while( diaSaida <= diaEntrada );
			
			leia.nextLine();
			
			System.out.println("Digite o nome da cidade do hotel: ");
			nomeCidade = leia.nextLine();
			
			System.out.println("O valor da pesquisa é: " + validarCidade(nomeCidade) + "\n");
			
		// 3 - Cálculos:
			
			valorConta[i] = calcularConta(diaEntrada, diaSaida, tipoQuarto);
			soma += valorConta[i];
			contador++;
		}
		media = soma / contador;
		
		// 4 - Saídas:
		
		for ( i = 0 ; i < 100 ; i++ ) {
			
			if ( valorConta[i] >= media ) {
				System.out.println(nomeHospede[i] + "   R$" + valorConta[i]);
			}
		}
	}
	
	public static boolean validarCidade( String cidade ) {
		
		boolean encontrar = false;
		
		for (int i = 0 ; i < 5 ; i++ ) {
			
			if ( cidade.equalsIgnoreCase(cidades[i]) ) {
				encontrar = true;
				break;
			}
		}
		return encontrar;
	}
	
	public static float calcularConta(byte entrada, byte saida, String tipo ) {
		
		float valorConta = 0;
		
		if ( tipo.equalsIgnoreCase("STANDARD") ) {
			valorConta = (saida - entrada) * 120;
			
		} else if ( tipo.equalsIgnoreCase("LUXO") ) {
			valorConta = (saida - entrada) * 150;
			
		} else if ( tipo.equalsIgnoreCase("SUPER-LUXO") ) {
			valorConta = (saida - entrada) * 180;
		}
		
		return valorConta;
	}
}
